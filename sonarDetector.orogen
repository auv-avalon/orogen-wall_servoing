name "sonardetector"

import_types_from "base"
import_types_from "avalon_base"
using_library "sonar_detectors"

task_context "Task" do

    property("enable_beam_threshold","bool",true).
        doc("if set to true the threshold for the sonar beams is enabled")
    property("beam_threshold_min","double", 0.5).
        doc("minimum distance for sonar responses in a beam")
    property("beam_threshold_max","double", 5).
        doc("maximum distance for sonar responses in a beam")

    property("enable_wall_estimation","bool",true).
        doc("if set to true the detector trys to estimate a wall")
    property("wall_estimation_start_angle","double", 2.35619).
        doc("start angle for the wall estimation")
    property("wall_estimation_end_angle","double", 3.92699).
        doc("end angle for the wall estimation")

    property("min_response_value","double",10).
        doc("minimum value for responses in a beam, everything below will be ignored")
    
    input_port "sonar_input", 'base::samples::SonarScan'
    input_port "ground_distance_input", 'base::samples::LaserScan'
    input_port "body_state", 'base::samples::RigidBodyState'

    output_port "virtual_point", 'base::Vector3d'

    port_driven "sonar_input"
end


deployment "sonardetector" do
    task("sonardetector", "Task").
        periodic(0.1)
end

